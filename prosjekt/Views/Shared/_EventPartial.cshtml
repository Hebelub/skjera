@using prosjekt.Data
@using Microsoft.AspNetCore.Identity
@model EventModel

@inject ApplicationDbContext DbContext;
@inject UserManager<ApplicationUser> UserManager;

@{
    var user = await UserManager.GetUserAsync(User);
    var userEventRelation = await Model.GetUserEventRelationAsync(DbContext, user);
    var attendingUsers = await Model.GetAttendingUsersAsync(DbContext);
}

@{ ViewBag.EventIncludeAllData = ViewBag.EventIncludeAllData ?? false; }

<div class="card customCard flex-md-row shadow-sm h-md-250" onclick="gotoEventPage(@Model.Id)">
    <div class="card-body d-flex flex-column align-items-start">
        <a class="d-inline-block mb-2 text-primary a-no-underline"
           asp-controller="Organization" asp-action="Details" asp-route-id="@Model.OrganizerId">
            @Model.Organizer.Name
        </a>
        <h2 class="mb-0">
            <span class="text-dark">@Model.Title</span>
        </h2>
        @if (Model.StartTime != null)
        {
            if (Model.StartTime.Date == DateTime.Today.Date)
            {
                <span class="mb-1 text-muted">Today @Model.StartTime.ToString("HH:mm")</span>
            }
            if (Model.StartTime.Year == DateTime.Today.Year)
            {
                <span class="mb-1 text-muted">@Model.StartTime.ToString("ddd, dd. MMM | HH:mm")</span>
            }
            else
            {
                <span class="mb-1 text-muted">@Model.StartTime.ToString("ddd, dd. MMM yyyy | HH:mm")</span>
            }
        }
        @if (Model.Duration.Ticks > 0)
        {
            <span class="mb-1 text-muted">Duration: @Model.Duration.ToString("d'd 'h'h 'm'm'")</span>
        }
        @if (Model.Location != null)
        {
            <span class="mb-1 text-muted">Location: @Model.Location</span>
        }
        @if (ViewBag.EventIncludeAllData && Model.Info != null)
        {
            <p class="card-text mb-auto">@Html.Raw(Model.Info)</p>
        }


        @* Start of bad js button code *@
        <script>
            function attend(buttonEl, id) {
                let attendingEl = document.getElementById("num_attending_" + id);
                console.log("attendingElement", attendingEl)
                
                let textSpan = buttonEl.childNodes[1];

                let shouldAttend = textSpan.innerHTML.trim() !== "Attending";

                if (shouldAttend) {
                    attendingEl.innerHTML++;
                    buttonEl.className = "btn btn-primary";
                    textSpan.innerHTML = "Attending";
                }
                else {
                    attendingEl.innerHTML--;
                     buttonEl.className = "btn btn-outline-primary";
                     textSpan.innerHTML = "Attend";
                }  
                
                attendEvent(id, shouldAttend);
                
                setAttendEvent(id, shouldAttend);
            }
        </script>

        <div>
            <br/>
            @if (User.Identity.IsAuthenticated)
            {
                @if (userEventRelation.IsAttending)
                {
                    <button class="btn btn-primary"
                            onClick="event.stopPropagation(); attend(this, @Model.Id)" value="Attending">
                        <span>Attending</span>
                    </button>
                }
                else
                {
                    <button class="btn btn-outline-primary"
                            onClick="event.stopPropagation(); attend(this, @Model.Id)">
                        <span>Attend</span>
                    </button>
                }
            }
            else
            {
            // ?ReturnUrl=%2FOrganization%2FCreate
                <a class="btn btn-outline-primary" asp-area="Identity" asp-page="/Account/Login">
                    <span>Attend</span>
                </a>
            }
            
            <span class="black"><span id="num_attending_@Model.Id">@attendingUsers.Count</span> attending</span>
            @* End of bad js button code *@
        </div>
    </div>

    
    @if (Model.ThumbnailUrl == string.Empty)
    {
        <svg class="bd-placeholder-img card-img-right flex-auto d-none d-lg-block"
             width="200" height="250" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice"
             focusable="false" role="img" aria-label="Placeholder: Thumbnail">
            <title>Placeholder</title><rect fill="#55595c" width="100%" height="100%"></rect><text fill="#eceeef" dy=".3em" x="50%" y="50%">Thumbnail</text>
        </svg>
    }
    else
    {
        <div class="imgBox">
            <img src="img/thumbnails/@Model.ThumbnailUrl" alt="Thumbnail">
            @* <img src="img/logos/@Model.Organization.LogoUrl"> *@
        </div>
    }
</div>