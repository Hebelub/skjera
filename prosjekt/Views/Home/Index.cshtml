@using prosjekt.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext;
@model IEnumerable<EventModel>

    <link rel="stylesheet" href="~/css/EventCalendarWidget.css" asp-append-version="true"/>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

@* <div class="container"> *@
@*     <div class="row justify-content-between"> *@
@*         <div class="col md-6"> *@
@*             <br/> *@
@*             <iframe src="https://embed.styledcalendar.com/#mHWjcKdM4AiM8rxOXgFy" title="Styled Calendar" class="styled-calendar-container" style="width: 60%;border: none;" data-cy="calendar-embed-iframe" height="60"></iframe> *@
@*             <script async type="module" src="https://embed.styledcalendar.com/assets/parent-window.js"></script>        <div class="col md-6"> *@
@*                 Upcoming Events Week 00 *@
@*             </div> *@
@*         </div> *@
@*         <div class="row mt-4"> *@
@*             <div class="col md-12"> *@
@*                 <div class="col">Events you might like</div> *@
@*             </div> *@
@*         </div> *@
@*     </div> *@
@* </div> *@


@{
    // create a function that returns a list of events
    string EventToJsEvent(EventModel e)
    {
        if (e.StartTime == null)
        {
            return null;
        }
        return $"{{eventName: '{e.Title}', date: '{e.StartTime!.Value.Date}', celanar: '{e.Organizer.Name}', color: 'red'}}";
    }
}

@{
    var events = await DbContext.EventModels.Include((o) => o.Organizer).ToListAsync();
    var jsEvents = new List<string>();
    
    foreach (var e in events)
    {
        jsEvents.Add(EventToJsEvent(e));
    }
}

<div class="FrontPageBody">
<div id="calendar"></div>
<script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.5.1/moment.min.js"></script>

 @if (Model != null)
    {
        <div class="Events_this_week">
            @{int events_this_week = 0;}
            @foreach (var item in Model)
            {
                if (item.StartTime > DateTime.Today && item.StartTime < DateTime.Now + TimeSpan.FromDays(7))
                {
                    events_this_week++;
                }
            }
            @{
                if (events_this_week == 0)
                {
                    <p>There are no events coming up this week</p>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        if (item.StartTime > DateTime.Today && item.StartTime < DateTime.Now + TimeSpan.FromDays(7))
                        {
                            <partial name="_EventPartial" model="item"/>
                        }
                    }
                }
            }
        </div>
    }
</div>