@using prosjekt.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext;
@model IEnumerable<EventModel>


@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>


@{
    // create a function that returns a list of events
    string EventToJsEvent(EventModel e)
    {
        if (e.StartTime == null)
        {
            return null;
        }
        return $"{{eventName: '{e.Title}', date: '{e.StartTime!.Value.Date}', celanar: '{e.Organizer.Name}', color: 'red'}}";
    }
}

@{
    var events = await DbContext.EventModels.Include((o) => o.Organizer).ToListAsync();
    var jsEvents = new List<string>();

    foreach (var e in events)
    {
        jsEvents.Add(EventToJsEvent(e));
    }
}

<div class="FrontPageBody">
    <partial name="_EventCalendarWidget"></partial>

    @if (Model != null)
    {
        <div class="Events_this_week">
            @{ int events_this_week = 0; }
            @foreach (var item in Model)
            {
                if (item.StartTime > DateTime.Today && item.StartTime < DateTime.Now + TimeSpan.FromDays(7))
                {
                    events_this_week++;
                }
            }
            @{
                if (events_this_week == 0)
                {
                    <p>There are no events coming up this week</p>
                }
                else
                {
                    @foreach (var item in Model)
                    {
                        if (item.StartTime > DateTime.Today && item.StartTime < DateTime.Now + TimeSpan.FromDays(7))
                        {
                            <partial name="_EventPartial" model="item"/>
                        }
                    }
                }
            }
        </div>
    }
</div>