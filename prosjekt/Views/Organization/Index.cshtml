@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<OrganizationModel>
@{
    var user = await UserManager.GetUserAsync(User);
    var listUserAccessRights = user?.GetOrganizationRelationsAsync().Result ?? new List<UserOrganization>();


    bool UserAccess(OrganizationModel organization)
    {
        foreach (var access in listUserAccessRights)
        {
            if (access.Organization == organization)
            {
                return true;
            }
        }
        return false;
    }

    List<OrganizationModel> organizationsWithAdminRights = new();
    List<OrganizationModel> organizationsWithoutAdminRights = new();
    foreach (var organization in Model)
    {
        if (UserAccess(organization))
        {
            organizationsWithAdminRights.Add(organization);
        }
        else
        {
            organizationsWithoutAdminRights.Add(organization);
        }
    }
}

<p>
    <a asp-action="Create">Create New</a>
</p>


@if (organizationsWithAdminRights.Count > 0)
{
    <h1>Foreninger du har Admintilgang til</h1>

    @foreach (var item in organizationsWithAdminRights)
    {
        <partial name="_OrganizationPartial" model="item"/>
    }
}


<h1>Linje/Student-foreninger</h1>

@foreach (var item in organizationsWithoutAdminRights) {
    <partial name="_OrganizationPartial" model="item"/>
}
