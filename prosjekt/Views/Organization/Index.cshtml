@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<OrganizationModel>
@{
    var user = await UserManager.GetUserAsync(User);
    List<UserOrganization> listUserOrganizationRelations = user == null
        ? new List<UserOrganization>()
        : user.GetOrganizationRelationsAsync().Result;

    UserOrganization GetUserOrganizationRelation(OrganizationModel organization)
    {
        foreach (var userOrganization in listUserOrganizationRelations)
        {
            if (userOrganization.Organization == organization)
            {
                return userOrganization;
            }
        }
        return new UserOrganization(null, organization);
    }

    List<UserOrganization> userOrganizationRelations = new();
    bool organizationWithAccessExist = false;
    bool organizationWithoutAccessExist = false;

    foreach (var organization in Model)
    {
        var userOrganizationRelation = GetUserOrganizationRelation(organization);
        userOrganizationRelations.Add(userOrganizationRelation);
        if (userOrganizationRelation.AccessRight.HasAnyAccess || User.IsInRole("Admin"))
        {
            organizationWithAccessExist = true;
        }
        else
        {
            organizationWithoutAccessExist = true;
        }
    }
}

<!--SearchOrganizations-->

<div class="wrapper one">
    <div class="container OneDouther1">
        <!--SearchOrganizations-->
        <div class="row height d-flex justify-content-center align-items-center">
            <div class="col-md-8">
                <div class="search">
                    <i class="fa fa-search"></i>
                    <form asp-controller="Organization" asp-action="Index" method="get">
                        <input type="text" class="form-control" placeholder="Organizations!" name="SearchString"/>
                        <button type="submit">Search</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="OneDouther2">
        <p>
            <a asp-action="Create" class="btn btn-primary btn-lg">Apply For A New Organization</a>
        </p>
    </div>
</div>

<br/><br/><br/>


@if (organizationWithAccessExist)
{
    <h1>Organizations you have admin rights to</h1>
    <br/>
    <br/>
    <br/>
    <div class="grid-container">

        @foreach (var relation in userOrganizationRelations)
        {
            if (relation.AccessRight.HasAnyAccess || User.IsInRole("Admin"))
            {
                <div class="grid-item1 ">
                    <partial name="_OrganizationPartial" model="relation"/>
                </div>
            }
        }
    </div>
}


@if (organizationWithoutAccessExist)
{
    <br/>
    <br/>
    <br/>
    <h1>Student Organizations</h1>
    <br/>
    <br/>
    <br/>
    <div class="grid-container">
        @foreach (var relation in userOrganizationRelations)
        {
            if (!relation.AccessRight.HasAnyAccess && !User.IsInRole("Admin"))
            {
                <div class="grid-item1">
                    <partial name="_OrganizationPartial" model="relation"/>
                </div>
            }
        }
    </div>
}